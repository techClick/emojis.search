{"version":3,"sources":["components/WhiteCard/WhiteCard.styled.js","components/WhiteCard/WhiteCard.jsx","components/Search/Search.styled.js","components/Search/Search.jsx","components/EmojiTable/EmojiTable.styled.js","components/EmojiTable/EmojiTable.jsx","styled.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["Container","styled","div","props","width","GoBack","Line","hr","WhiteCard","goBack","children","title","onClick","SearchBox","input","Submit","button","Search","searchText","setSearchText","allResults","setSearchResults","placeholder","value","onChange","e","target","searchResults","filter","emoji","keywords","includes","console","log","length","showSearchResults","ResultsTable","Results","results","setResults","columns","field","data","localization","toolbar","searchPlaceholder","EmptyBlock","App","useState","emojiList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"srsKAEaA,EAAYC,IAAOC,IAAV,8JAIX,SAACC,GAAD,OAAWA,EAAMC,OAAS,MAKxBC,EAASJ,IAAOC,IAAV,iLAWNI,EAAOL,IAAOM,GAAV,yJ,QCHFC,EAhBG,YAAiD,IAA5BJ,EAA2B,EAA3BA,MAAOK,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACpD,OACE,eAAC,EAAD,CAAaN,MAAOA,EAAOO,MAAM,kBAAjC,UACGF,GACC,qCACE,cAAC,EAAD,CAAUG,QAAS,kBAAMH,KAAUE,MAAM,SAAzC,4BAGA,cAAC,EAAD,OAGHD,MCZMV,EAAYC,IAAOC,IAAV,0NAYTW,EAAYZ,IAAOa,MAAV,4DAKTC,EAASd,IAAOe,OAAV,kUCoBJC,EAnCA,YAEX,IADFC,EACC,EADDA,WAAYC,EACX,EADWA,cAAeC,EAC1B,EAD0BA,WAAYC,EACtC,EADsCA,iBAYvC,OACE,cAAC,EAAD,UACE,eAAC,EAAD,CAAWjB,MAAM,MAAjB,UACE,cAAC,EAAD,CACEkB,YAAY,6BACZX,MAAM,cACNY,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAcM,EAAEC,OAAOH,UAE1C,8BACE,cAAC,EAAD,CACEZ,MAAM,eACNC,QAAS,kBAtBO,WACxB,IAAMe,EAAgBP,EAAWQ,QAAO,SAACC,GAAD,OAAWA,EAAMC,SAASC,SAASb,MAC3Ec,QAAQC,IAAIN,GACiB,IAAzBA,EAAcO,OAIlBb,EAAiBM,GAHfN,EAAiB,CAAC,UAkBGc,IAFjB,4B,kBClBKC,EAPMnC,IAAOC,IAAV,yGCyBHmC,EAtBC,YAAuD,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAYrB,EAAc,EAAdA,WAMtD,OACE,cAAC,EAAD,CAAWd,MAAM,MAAMK,OAAQ,kBAAM8B,EAAW,KAAhD,SACE,cAAC,EAAD,UACE,cAAC,IAAD,CAEE5B,MAAO,gBAAkBO,EAAa,IACtCsB,QAXQ,CACd,CAAE7B,MAAO,QAAS8B,MAAO,SACzB,CAAE9B,MAAO,SAAU8B,MAAO,UAC1B,CAAE9B,MAAO,WAAY8B,MAAO,aAStBC,KAAMJ,EAENK,aAAc,CAAEC,QAAS,CAAEC,kBAAmB,gBAAkB3B,EAAa,aClB1ElB,EAAYC,IAAOC,IAAV,kKAST4C,EAAa7C,IAAOC,IAAV,qF,SCwBR6C,EA5BH,WAAgB,IAAD,EACKC,mBAAS,IADd,mBAClBV,EADkB,KACTC,EADS,OAEWS,mBAAS,IAFpB,mBAElB9B,EAFkB,KAENC,EAFM,KAIzB,OACE,eAAC,EAAD,WACuB,IAAnBmB,EAAQJ,QACR,cAAC,EAAD,CACEd,WAAY6B,EACZ5B,iBAAkBkB,EAClBrB,WAAYA,EACZC,cAAeA,IAGhBmB,EAAQJ,OAAS,GAAoB,UAAfI,EAAQ,IAC/B,cAAC,EAAD,CAAcA,QAASA,EAASC,WAAYA,EAAYrB,WAAYA,IAEnEoB,EAAQJ,OAAS,GAAoB,UAAfI,EAAQ,IAC/B,cAAC,EAAD,CAAWlC,MAAM,MAAMK,OAAQ,kBAAM8B,EAAW,KAAhD,SACE,cAAC,EAAD,uDCVKW,EAhBS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAIpB,IAFFC,EAEC,EAFDA,OAAQC,EAEP,EAFOA,OAAQC,EAEf,EAFeA,OAAQC,EAEvB,EAFuBA,OAAQC,EAE/B,EAF+BA,QAGlCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0fe54e5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: white;\n  padding: 30px;\n  border-radius: 8px;\n  width: ${(props) => props.width || ''};\n  text-align: center;\n  position: relative;\n`;\n\nexport const GoBack = styled.div`\n  margin-bottom: 1px;\n  float: left;\n  text-decoration: underline;\n  color: #3cbaf0;\n  font-size: 12px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Line = styled.hr`\n  height: 1px;\n  width: 100%;\n  position: absolute;\n  border: 0;\n  background-color: #c9c9c9;\n  top: 66px;\n  left: 0;\n`;\n","import React from 'react';\nimport * as S from './WhiteCard.styled';\n\nconst WhiteCard = function WhiteCard({ width, goBack, children }) {\n  return (\n    <S.Container width={width} title=\"whiteBackground\">\n      {goBack && (\n        <>\n          <S.GoBack onClick={() => goBack()} title=\"goBack\">\n            Back to search\n          </S.GoBack>\n          <S.Line />\n        </>\n      )}\n      {children}\n    </S.Container>\n  );\n};\n\nexport default WhiteCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 80vw;\n  position: absolute;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  top:50%;\n  left:50%;\n  min-width: 800px;\n  transform: translate(-50%,-50%);\n`;\n\nexport const SearchBox = styled.input`\n  width: 97%;\n  height: 30px;\n`;\n\nexport const Submit = styled.button`\n  margin-top: 10px;\n  background-color: #15d47b;\n  border: none;\n  border-radius: 5px;\n  height: 35px;\n  width: 40%;\n  min-width: 60px;\n  max-width: 85px;\n  color: white;\n  font-weight: bold;\n  font-size: 13px;\n  &:hover {\n    cursor: pointer;\n    background-color: #a7d6c0;\n  }\n`;\n","import React from 'react';\nimport WhiteCard from '../WhiteCard/WhiteCard';\nimport * as S from './Search.styled';\n\nconst Search = function Search({\n  searchText, setSearchText, allResults, setSearchResults,\n}) {\n  const showSearchResults = () => {\n    const searchResults = allResults.filter((emoji) => emoji.keywords.includes(searchText));\n    console.log(searchResults);\n    if (searchResults.length === 0) {\n      setSearchResults(['Empty']);\n      return;\n    }\n    setSearchResults(searchResults);\n  };\n\n  return (\n    <S.Container>\n      <WhiteCard width=\"25%\">\n        <S.SearchBox\n          placeholder=\"Search emojis via keywords\"\n          title=\"searchInput\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n        />\n        <div>\n          <S.Submit\n            title=\"submitButton\"\n            onClick={() => showSearchResults()}\n          >\n            Submit\n          </S.Submit>\n        </div>\n      </WhiteCard>\n    </S.Container>\n  );\n};\n\nexport default Search;\n","import styled from 'styled-components';\n\nconst ResultsTable = styled.div`\n  width: 100%;\n  text-align: left;\n  margin-top: 79px;\n  color: #3b3b3b;\n`;\n\nexport default ResultsTable;\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport WhiteCard from '../WhiteCard/WhiteCard';\nimport ResultsTable from './EmojiTable.styled';\n\nconst Results = function Results({ results, setResults, searchText }) {\n  const columns = [\n    { title: 'TITLE', field: 'title' },\n    { title: 'SYMBOL', field: 'symbol' },\n    { title: 'KEYWORDS', field: 'keywords' },\n  ];\n  return (\n    <WhiteCard width=\"70%\" goBack={() => setResults([])}>\n      <ResultsTable>\n        <MaterialTable\n          // eslint-disable-next-line prefer-template\n          title={'Results for \"' + searchText + '\"'}\n          columns={columns}\n          data={results}\n          // eslint-disable-next-line prefer-template\n          localization={{ toolbar: { searchPlaceholder: 'Keywords in \"' + searchText + '\"' } }}\n        />\n      </ResultsTable>\n    </WhiteCard>\n  );\n};\n\nexport default Results;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  font-family: sans-serif;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 60px 0;\n`;\n\nexport const EmptyBlock = styled.div`\n  margin-top:80px;\n  color: black;\n  font-size: 13px;\n`;\n","import React, { useState } from 'react';\nimport Search from './components/Search/Search';\nimport ResultsTable from './components/EmojiTable/EmojiTable';\nimport * as S from './styled';\nimport emojiList from './assets/emoji-list.json';\nimport WhiteCard from './components/WhiteCard/WhiteCard';\n\nconst App = function App() {\n  const [results, setResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  return (\n    <S.Container>\n      { results.length === 0 && (\n        <Search\n          allResults={emojiList}\n          setSearchResults={setResults}\n          searchText={searchText}\n          setSearchText={setSearchText}\n        />\n      )}\n      { (results.length > 0 && results[0] !== 'Empty') && (\n        <ResultsTable results={results} setResults={setResults} searchText={searchText} />\n      )}\n      { (results.length > 0 && results[0] === 'Empty') && (\n        <WhiteCard width=\"50%\" goBack={() => setResults([])}>\n          <S.EmptyBlock>\n            No keywords found with your search\n          </S.EmptyBlock>\n        </WhiteCard>\n      )}\n    </S.Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then((\n      {\n        getCLS, getFID, getFCP, getLCP, getTTFB,\n      },\n    ) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}